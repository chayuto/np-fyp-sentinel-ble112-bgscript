dim tmp(10)
dim out(10)
dim result
dim channel
dim tlen

event system_boot(major ,minor ,patch ,build ,ll_version ,protocol_version ,hw )
#set to advertising mode
	call gap_set_mode(gap_general_discoverable,gap_undirected_connectable)
#set bondable mode
#	call sm_set_bondable_mode(1)
#config spi&accelerometer	
	call hardware_io_port_write(1,$7,$3)
	call hardware_io_port_config_direction(1,$7)	
	call hardware_io_port_write(1,$7,$7)
	call hardware_spi_transfer(0,2,"\x0a\x06")
	call hardware_io_port_write(1,$7,$3)
	
#start timer at 1second interval, repeating
	call hardware_set_soft_timer(4000,0,0)
end

event hardware_soft_timer(handle)
	call hardware_io_port_write(1,$7,$7)
	call hardware_spi_transfer(0,2,"\x18\x00")(result,channel,tlen,tmp(0))
	call hardware_io_port_write(1,$7,$3)	
	out(0:2)= tmp(0:2)

	call hardware_io_port_write(1,$7,$7)
	call hardware_spi_transfer(0,2,"\x1c\x00")(result,channel,tlen,tmp(0))
	call hardware_io_port_write(1,$7,$3)	
	out(2:2)= tmp(0:2)

	call hardware_io_port_write(1,$7,$7)
	call hardware_spi_transfer(0,2,"\x20\x00")(result,channel,tlen,tmp(0))
	call hardware_io_port_write(1,$7,$3)	
	out(4:2)= tmp(0:2)
	call attributes_write(acc_data,0,6,out(0:6))

end

event connection_disconnected(handle,result)
#connection disconnected, continue advertising
    call gap_set_mode(gap_general_discoverable,gap_undirected_connectable)
end
